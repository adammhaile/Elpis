<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ElpisControls="clr-namespace:Elpis.Controls">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/Elpis;component/Styles/Brushes.xaml" />
  </ResourceDictionary.MergedDictionaries>
    <Style x:Key="ImageButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0" StrokeThickness="0" Stroke="{StaticResource ControlStrokeBrush}"
                       StrokeDashArray="0" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ElpisControls:ImageButton">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ImageButtonFocusVisual}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ElpisControls:ImageButton}">
          <Grid x:Name="Chrome" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Image x:Name="ButtonImage" Grid.Column="0"
                   Source="{Binding InactiveImageUri, RelativeSource={RelativeSource TemplatedParent}}" />
            <ContentPresenter Grid.Column="1"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"
                              RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Grid>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="False" />
                <Condition Property="IsActive" Value="False" />
              </MultiTrigger.Conditions>
              <MultiTrigger.Setters>
                <Setter TargetName="ButtonImage" Property="Source"
                        Value="{Binding InactiveImageUri, RelativeSource={RelativeSource TemplatedParent}}" />
              </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True" />
                <Condition Property="IsActive" Value="False" />
              </MultiTrigger.Conditions>
              <MultiTrigger.Setters>
                <Setter TargetName="ButtonImage" Property="Source"
                        Value="{Binding ActiveImageUri, RelativeSource={RelativeSource TemplatedParent}}" />
              </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="False" />
                <Condition Property="IsActive" Value="True" />
              </MultiTrigger.Conditions>
              <MultiTrigger.Setters>
                <Setter TargetName="ButtonImage" Property="Source"
                        Value="{Binding ActiveImageUri, RelativeSource={RelativeSource TemplatedParent}}" />
              </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True" />
                <Condition Property="IsActive" Value="True" />
              </MultiTrigger.Conditions>
              <MultiTrigger.Setters>
                <Setter TargetName="ButtonImage" Property="Source"
                        Value="{Binding InactiveImageUri, RelativeSource={RelativeSource TemplatedParent}}" />
              </MultiTrigger.Setters>
            </MultiTrigger>
            <!--<Trigger Property="IsActive" Value="True">
                            <Setter TargetName="ButtonImage" Property="Source" Value="{Binding ActiveImageUri, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonImage" Property="Source" Value="{Binding HoverImageUri, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>-->
            <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.75" />
                        </Trigger>-->
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>